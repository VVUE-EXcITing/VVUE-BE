spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${PROD_DATABASE_URL}
    username: ${PROD_DATABASE_USERNAME}
    password: ${PROD_DATABASE_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create #validate

    properties:
      hibernate:
        format_sql: true
        show_sql: true

    defer-datasource-initialization: true   #-> data.sql을 사용하기 위해 추가

  servlet:
    multipart:  # 파일 올리는 설정
      max-file-size: 50MB # 요청한 파일 한 개의 크기
      max-request-size: 50MB # 요청한 파일 전체의 크기

  redis:
    host: ${PROD_REDIS_HOST}
    port: ${PROD_REDIS_PORT}
    password: ${PROD_REDIS_PASSWORD}

# jwt 설정
custom:
  jwt:
    secret: ${PROD_JWT_SECRET}

logging:
  level:
    com.exciting.vvue: DEBUG
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO

---

spring:
  application:
    name: monitoring

management:
  endpoint:
    metrics:
      enabled: true  # endpoint를 활성화한다.
    prometheus:
      enabled: true

  endpoints:  # Actuator가 제공하는 endpoint를 열어준다.
    web:
      exposure:
        include: health, info, metrics, prometheus

  metrics:
    tags:
      application: ${spring.application.name}